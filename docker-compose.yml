version: '3.8'

services:
  api_gateway:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "5000:5000"
    depends_on:
      - db
      - redis
      - rabbitmq
    environment:
      - FLASK_APP=app
      - FLASK_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}

  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]

  parser_worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=${DATABASE_URL}

  redis:
    image: redis:6-alpine
    volumes:
      - redis_data:/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
